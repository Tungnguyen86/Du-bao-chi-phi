import streamlit as st
import pandas as pd
import matplotlib.pyplot as plt
import matplotlib.ticker as ticker
from sklearn.linear_model import LinearRegression

st.set_page_config(page_title="D·ª± b√°o chi ph√≠ kh√°m ch·ªØa b·ªánh", layout="centered")
st.title("üìà D·ª± b√°o Chi ph√≠ Kh√°m ch·ªØa b·ªánh theo nh√≥m")

# === 1. Upload file Excel ===
uploaded_file = st.file_uploader("üì§ T·∫£i l√™n file Excel (.xlsx)", type="xlsx")

if uploaded_file:
    try:
        df = pd.read_excel(uploaded_file, sheet_name='ChiPhi')
    except:
        st.error("‚ùå Kh√¥ng t√¨m th·∫•y sheet 'ChiPhi'. Vui l√≤ng ki·ªÉm tra l·∫°i file.")
    else:
        # === 2. Chu·∫©n b·ªã d·ªØ li·ªáu ===
        df['ThoiGian'] = df['NƒÉm'].astype(str) + ' Q' + df['Qu√Ω'].astype(str).str.extract('(\d+)')[0]
        df['Index'] = range(1, len(df) + 1)

        st.success("‚úÖ ƒê√£ n·∫°p d·ªØ li·ªáu. Vui l√≤ng ch·ªçn nh√≥m chi ph√≠ b√™n d∆∞·ªõi.")
        nhoms = df['Nh√≥m chi ph√≠'].unique()
        chon_nhom = st.selectbox("üîç Ch·ªçn nh√≥m chi ph√≠ c·∫ßn d·ª± b√°o:", nhoms)

        df_nhom = df[df['Nh√≥m chi ph√≠'] == chon_nhom].copy()

        # === 3. Hu·∫•n luy·ªán m√¥ h√¨nh Linear Regression ===
        X = df_nhom[['Index']]
        y_bhyt = df_nhom['BHYT_TT']
        y_chiphi = df_nhom['Chi ph√≠ b√¨nh qu√¢n']

        model_bhyt = LinearRegression().fit(X, y_bhyt)
        model_chiphi = LinearRegression().fit(X, y_chiphi)

        next_index = X.iloc[-1, 0] + 1
        du_doan_bhyt = model_bhyt.predict(pd.DataFrame({'Index': [next_index]}))[0]
        du_doan_chiphi = model_chiphi.predict(pd.DataFrame({'Index': [next_index]}))[0]

        # === 4. Hi·ªÉn th·ªã k·∫øt qu·∫£ ===
        st.subheader(f"üìä D·ª± b√°o qu√Ω ti·∫øp theo ({chon_nhom})")
        st.markdown(f"""
        - **‚û°Ô∏è BHYT_TT:** `{round(du_doan_bhyt):,}` VND  
        - **‚û°Ô∏è Chi ph√≠ b√¨nh qu√¢n:** `{round(du_doan_chiphi):,}` VND  
        """)

        # === 5. V·∫Ω bi·ªÉu ƒë·ªì xu h∆∞·ªõng ===
        x_labels = df_nhom['ThoiGian'].tolist() + ['D·ª± b√°o']
        y_bhyt_all = y_bhyt.tolist() + [du_doan_bhyt]
        y_chiphi_all = y_chiphi.tolist() + [du_doan_chiphi]

        fig, ax = plt.subplots(figsize=(10, 5))
        ax.plot(x_labels, y_bhyt_all, marker='o', label='BHYT_TT')
        ax.plot(x_labels, y_chiphi_all, marker='x', label='Chi ph√≠ b√¨nh qu√¢n')

        ax.set_title(f'D·ª± b√°o chi ph√≠ theo th·ªùi gian - Nh√≥m: {chon_nhom}')
        ax.set_xlabel('Th·ªùi ƒëi·ªÉm (Qu√Ω/NƒÉm)')
        ax.set_ylabel('Gi√° tr·ªã (Tri·ªáu VND)')
        ax.yaxis.set_major_formatter(ticker.FuncFormatter(lambda x, pos: f'{int(x/1e6)}M'))

        ax.set_xticks(range(len(x_labels)))
        ax.set_xticklabels(x_labels, rotation=45)
        ax.legend()
        ax.grid(True)
        st.pyplot(fig)

        # === 6. Hi·ªÉn th·ªã b·∫£ng d·ªØ li·ªáu g·ªëc ===
        with st.expander("üìÇ Xem d·ªØ li·ªáu g·ªëc"):
            st.dataframe(df_nhom)

else:
    st.info("‚¨ÜÔ∏è H√£y t·∫£i l√™n file Excel c√≥ sheet t√™n 'ChiPhi'. File c·∫ßn c√≥ c√°c c·ªôt: NƒÉm, Qu√Ω, Nh√≥m chi ph√≠, BHYT_TT, Chi ph√≠ b√¨nh qu√¢n.")
